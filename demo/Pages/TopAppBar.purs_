module Demo.Pages.TopAppBar where

import Demo.HOC.CatalogPage
import Demo.Route
import Protolude
import Data.Array as Array
import Data.Maybe as Maybe
import Halogen
import Halogen as H
import Halogen.HTML (IProp)
import Halogen.HTML as HH
import Halogen.HTML.Properties as HP
import Halogen.HTML.Events as HE
import Halogen.HTML.Properties.ARIA as Halogen.HTML.Properties.ARIA
import HalogenMWC.IconButton as IconButton
import HalogenMWC.TopAppBar as TopAppBar
import HalogenMWC.Typography as Typography

data Model =
    {}

defaultModel :: Model
defaultModel =
    {}

data Msg
    = NoOp

update :: Msg -> Model -> Model
update w i model =
    model

view :: Model -> CatalogPage Msg
view model =
    { title = "Top App Bar"
    , prelude = "Top App Bars are a container for items such as application title, navigation icon, and action items."
    , resources =
        { materialDesignGuidelines = Just "https://material.io/go/design-app-bar-top"
        , documentation = Just "https://package.elm-lang.org/packages/aforemny/material-components-web-elm/latest/Material-TopAppBar"
        , sourceCode = Just "https://github.com/material-components/material-components-web/tree/master/packages/mdc-top-app-bar"
        }
    , hero =
        [ HH.div
            [ style "width" "480px"
            , style "height" "72px"
            ]
            [ TopAppBar.regular
                (TopAppBar.defaultConfig # TopAppBar.setAttributes [ style "position" "static" ])
                [ TopAppBar.section
                    [ TopAppBar.alignStart ]
                    [ IconButton.iconButton
                        (IconButton.defaultConfig
                            # IconButton.setAttributes [ TopAppBar.navigationIcon ]
                        )
                        "menu"
                    , HH.span [ TopAppBar.title ] [ HH.text "Title" ]
                    ]
                , TopAppBar.section
                    [ TopAppBar.alignEnd ]
                    [ IconButton.iconButton
                        (IconButton.defaultConfig
                            # IconButton.setAttributes [ TopAppBar.actionItem ]
                        )
                        "file_download"
                    , IconButton.iconButton
                        (IconButton.defaultConfig
                            # IconButton.setAttributes [ TopAppBar.actionItem ]
                        )
                        "print"
                    , IconButton.iconButton
                        (IconButton.defaultConfig
                            # IconButton.setAttributes [ TopAppBar.actionItem ]
                        )
                        "more_vert"
                    ]
                ]
            ]
        ]
    , content =
        [ HH.div
            [ style "display" "-ms-flexbox"
            , style "display" "flex"
            , style "-ms-flex-wrap" "wrap"
            , style "flex-wrap" "wrap"
            , style "min-height" "200px"
            ]
            [ iframe "Standard" Url.StandardTopAppBar
            , iframe "Fixed" Url.FixedTopAppBar
            , iframe "Dense" Url.DenseTopAppBar
            , iframe "Prominent" Url.ProminentTopAppBar
            , iframe "Short" Url.ShortTopAppBar
            , iframe "Short - Always Collapsed" Url.ShortCollapsedTopAppBar
            ]
        ]
    }

iframe :: String -> Url -> Html w i
iframe title url =
    let
        stringUrl =
            Url.toString url
    in
    HH.div
        [ style "display" "inline-block"
        , style "-ms-flex" "1 1 45%"
        , style "flex" "1 1 45%"
        , style "-ms-flex-pack" "distribute"
        , style "justify-content" "space-around"
        , style "min-height" "200px"
        , style "min-width" "400px"
        , style "padding" "15px"
        ]
        [ HH.div []
            [ HH.a
                [ HP.href stringUrl
                , HP.target "_blank"
                ]
                [ HH.h3 [ Typography.subtitle1 ] [ HH.text title ]
                ]
            ]
        , HH.iframe
            [ style "width" "100%"
            , style "height" "200px"
            , HP.src stringUrl
            ]
            []
        ]
