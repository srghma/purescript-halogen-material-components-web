module Demo.Pages.Cards where

import Browser.Dom
import Demo.HOC.CatalogPage
import Protolude
import Data.Array as Array
import Data.Maybe as Maybe
import Halogen
import Halogen as H
import Halogen.HTML (IProp)
import Halogen.HTML as HH
import Halogen.HTML.Properties as HP
import Halogen.HTML.Events as HE
import Halogen.HTML.Properties.ARIA as Halogen.HTML.Properties.ARIA
import HalogenMWC.Button as Button
import HalogenMWC.Card as Card
import HalogenMWC.IconButton as IconButton
import HalogenMWC.Theme as Theme
import HalogenMWC.Typography as Typography
import Task

data Model =
    {}

defaultModel :: Model
defaultModel =
    {}

data Msg
    = Focus String
    | Focused (Result Browser.Dom.Error ())

update :: Msg -> Model -> ( Model, Cmd Msg )
update w i model =
    case w i of
        Focus id ->
            ( model, Task.attempt Focused (Browser.Dom.focus id) )

        Focused _ ->
            ( model, Cmd.none )

view :: Model -> CatalogPage Msg
view model =
    { title = "Card"
    , prelude = "Cards contain content and actions about a single subject."
    , resources =
        { materialDesignGuidelines = Just "https://material.io/go/design-cards"
        , documentation = Just "https://package.elm-lang.org/packages/aforemny/material-components-web-elm/latest/Material-Card"
        , sourceCode = Just "https://github.com/material-components/material-components-web/tree/master/packages/mdc-card"
        }
    , hero = heroCard
    , content =
        [ exampleCard1
        , exampleCard2
        , exampleCard3
        , focusCard
        ]
    }

heroCard :: Array (Html w i)
heroCard =
    [ Card.card
        (Card.defaultConfig
            # Card.setAttributes [ style "width" "350px" ]
        )
        { blocks =
            Card.primaryAction []
                [ demoMedia
                , demoTitle
                , demoBody
                ]
        , actions = Just demoActions
        }
    ]

exampleCard1 :: Html w i
exampleCard1 =
    Card.card
        (Card.defaultConfig
            # Card.setAttributes
                [ style "margin" "48px 0"
                , style "width" "350px"
                ]
        )
        { blocks =
            Card.primaryAction []
                [ demoMedia
                , demoTitle
                , demoBody
                ]
        , actions = Nothing
        }

exampleCard2 :: Html w i
exampleCard2 =
    Card.card
        (Card.defaultConfig
            # Card.setAttributes
                [ style "margin" "48px 0"
                , style "width" "350px"
                ]
        )
        { blocks =
            Card.primaryAction []
                [ demoTitle
                , demoBody
                ]
        , actions = Just demoActions
        }

exampleCard3 :: Html w i
exampleCard3 =
    Card.card
        (Card.defaultConfig
            # Card.setAttributes
                [ style "margin" "48px 0"
                , style "width" "350px"
                , style "border-radius" "24px 8px"
                ]
        )
        { blocks =
            Card.primaryAction []
                [ demoTitle
                , demoBody
                ]
        , actions = Just demoActions
        }

focusCard :: Html Msg
focusCard =
    HH.div []
        [ Card.card
            (Card.defaultConfig
                # Card.setAttributes
                    [ HP.id "my-card"
                    , style "margin" "48px 0"
                    , style "width" "350px"
                    ]
            )
            { blocks =
                Card.primaryAction []
                    [ demoTitle
                    , demoBody
                    ]
            , actions = Just demoActions
            }
        , HH.text "\u{00A0}"
        , Button.raised
            (Button.defaultConfig # Button.setOnClick (Focus "my-card"))
            "Focus"
        ]

demoMedia :: Card.Block w i
demoMedia =
    Card.sixteenToNineMedia [] "images/photos/3x2/2.jpg"

demoTitle :: Card.Block w i
demoTitle =
    Card.block $
        HH.div
            [ style "padding" "1rem" ]
            [ HH.h2
                [ Typography.headline6
                , style "margin" "0"
                ]
                [ HH.text "Our Changing Planet" ]
            , HH.h3
                [ Typography.subtitle2
                , Theme.textSecondaryOnBackground
                , style "margin" "0"
                ]
                [ HH.text "by Kurt Wagner" ]
            ]

demoBody :: Card.Block w i
demoBody =
    Card.block $
        HH.div
            [ Typography.body2
            , Theme.textSecondaryOnBackground
            , style "padding" "0 1rem 0.5rem 1rem"
            ]
            [ HH.text
                """
                Visit ten places on our planet that are undergoing the biggest
                changes today.
                """
            ]

demoActions :: Card.Actions w i
demoActions =
    Card.actions
        { buttons =
            [ Card.button Button.defaultConfig "Read"
            , Card.button Button.defaultConfig "Bookmark"
            ]
        , icons =
            [ Card.icon IconButton.defaultConfig "favorite_border"
            , Card.icon IconButton.defaultConfig "share"
            , Card.icon IconButton.defaultConfig "more_vert"
            ]
        }
