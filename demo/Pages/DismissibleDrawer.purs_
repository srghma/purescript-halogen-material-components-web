module Demo.Pages.DismissibleDrawer where
    ( Model
    , Msg(..)
    , defaultModel
    , update
    , view
    )

import Demo.DrawerPage as DrawerPage
import HalogenMWC.Drawer.Dismissible as DismissibleDrawer

data Model =
    { open :: Boolean
    , selectedIndex :: Int
    }

defaultModel :: Model
defaultModel =
    { open = false
    , selectedIndex = 0
    }

data Msg
    = ToggleDrawer
    | CloseDrawer
    | SetSelectedIndex Int

update :: Msg -> Model -> Model
update msg model =
    case msg of
        ToggleDrawer ->
            { model | open = not model.open }

        CloseDrawer ->
            { model | open = false }

        SetSelectedIndex index ->
            { model | selectedIndex = index }

view :: Model -> DrawerPage Msg
view model =
    { title = "Dismissible Drawer"
    , drawer =
        DismissibleDrawer.drawer
            (DismissibleDrawer.defaultConfig
                # DismissibleDrawer.setOpen model.open
                # DismissibleDrawer.setOnClose CloseDrawer
            )
            (DrawerPage.drawerBody SetSelectedIndex model.selectedIndex)
    , onMenuClick = Just ToggleDrawer
    , scrim = Nothing
    }
