module Demo.Pages.Drawer.Dismissible where
    ( State
    , Action(..)
    , initialState
    , update
    , render
    )

import Demo.DrawerPage as DrawerPage
import HalogenMWC.Drawer.Dismissible as Drawer.Dismissible

data State =
    { open :: Boolean
    , selectedIndex :: Int
    }

initialState :: forall r w i . State
initialState =
    { open: false
    , selectedIndex: 0
    }

data Action
    = ToggleDrawer
    | CloseDrawer
    | SetSelectedIndex Int

update :: forall r w i . Action -> State -> State
update w i model =
    case w i of
        ToggleDrawer ->
            { model | open = not model.open }

        CloseDrawer ->
            { model | open = false }

        SetSelectedIndex index ->
            { model | selectedIndex = index }

render :: forall r w i . State -> DrawerPage Action
render model =
    { title: "Dismissible Drawer"
    , drawer =
        Drawer.Dismissible.drawer
            (Drawer.Dismissible.defaultConfig
                { open = model.open
                , onClose = CloseDrawer
            )
            (DrawerPage.drawerBody SetSelectedIndex model.selectedIndex)
    , onMenuClick: Just ToggleDrawer
    , scrim: Nothing
    }
