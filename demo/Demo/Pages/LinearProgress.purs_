module Demo.Pages.LinearProgress where

import Demo.HOC.CatalogPage
import Protolude
import Data.Array as Array
import Data.Maybe as Maybe
import Halogen
import Halogen as H
import Halogen.HTML (IProp)
import Halogen.HTML as HH
import Halogen.HTML.Properties as HP
import Halogen.HTML.Events as HE
import Halogen.HTML.Properties.ARIA as Halogen.HTML.Properties.ARIA
import Material.Classes.Typography

data State =
    Unit

initialState :: forall r w i . State
initialState = unit

data Action
    = NoOp

update :: forall r w i . Action -> State -> State
update w i model =
    model

render :: forall r w i . State -> CatalogPage Action
render model =
    { title: "Linear Progress Indicator"
    , prelude: "Progress indicators display the length of a process or express an unspecified wait time."
    , resources:
        { materialDesignGuidelines: Just "https://material.io/go/design-progress-indicators"
        , documentation: Just "https://package.elm-lang.org/packages/aforemny/material-components-web-elm/latest/Material-LinearProgress"
        , sourceCode: Just "https://github.com/material-components/material-components-web/tree/master/packages/mdc-linear-progress"
        }
    , hero: [ LinearProgress.determinate LinearProgress.defaultConfig { progress: 0.5 } ]
    , content:
        [ HH.h3 [ mdc_typography____subtitle1 ] [ HH.text "Buffered" ]
        , LinearProgress.buffered LinearProgress.defaultConfig { progress: 0.5, buffered: 0.75 }
        , HH.h3 [ mdc_typography____subtitle1 ] [ HH.text "Indeterminate" ]
        , LinearProgress.indeterminate LinearProgress.defaultConfig
        { HH.h3 [ mdc_typography____subtitle1 ] [ HH.text "Reversed" ]
        , LinearProgress.determinate
            (LinearProgress.defaultConfig { reverse = true)
            { progress: 0.5 }
        , HH.h3 [ mdc_typography____subtitle1 ] [ HH.text "Reversed Buffered" ]
        , LinearProgress.buffered (LinearProgress.defaultConfig { reverse = true)
            { progress: 0.5, buffered: 0.75 }
        ]
    }
